// <auto-generated />
using System;
using DyasCsrs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DyasCsrs.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DyasCsrs.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DNI = "12345678",
                            Direccion = "Calle Falsa 123",
                            Nombre = "Carlos Sánchez",
                            Telefono = "987111222"
                        },
                        new
                        {
                            Id = 2,
                            DNI = "87654321",
                            Direccion = "Calle Verdadera 456",
                            Nombre = "María Ruiz",
                            Telefono = "987333444"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.DetallesVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("Decimal(8,2)");

                    b.Property<int>("ProductoMotoID")
                        .HasColumnType("int");

                    b.Property<int?>("StockSucursalId1")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoMotoID");

                    b.HasIndex("StockSucursalId1");

                    b.ToTable("DetallesVentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1,
                            CompraId = 1,
                            PrecioUnitario = 9500.00m,
                            ProductoMotoID = 1,
                            SubTotal = 9500.00m
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1,
                            CompraId = 2,
                            PrecioUnitario = 9000.00m,
                            ProductoMotoID = 2,
                            SubTotal = 9000.00m
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@store.com",
                            Nombre = "Administrador",
                            Password = "admin123",
                            RolId = 1,
                            Telefono = "987654321"
                        },
                        new
                        {
                            Id = 2,
                            Email = "gerente@store.com",
                            Nombre = "Gerente",
                            Password = "gerente123",
                            RolId = 3,
                            Telefono = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            Email = "vendedor@store.com",
                            Nombre = "Vendedor Default",
                            Password = "vendedor123",
                            RolId = 2,
                            Telefono = "987654321"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.EstadoDevolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadosDevolucion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Aprobado"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Rechazado"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.EstadoProductoMoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadosProductoMotos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Eliminado"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodosPago");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Tarjeta"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.OpcionDevolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoDId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaSolicitud")
                        .HasColumnType("date");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoDId");

                    b.HasIndex("VentaId")
                        .IsUnique();

                    b.ToTable("OpcionesDevolucion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstadoDId = 1,
                            FechaSolicitud = new DateOnly(2025, 7, 3),
                            Motivo = "Motor con fallas",
                            VentaId = 1
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.ProductoMoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CC")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoPMId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoPMId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ProductoMotos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Anio = "2022",
                            CC = "250",
                            Color = "Negro",
                            EstadoPMId = 1,
                            Marca = "Yamaha",
                            Modelo = "FZ25",
                            Precio = 15000.00m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Anio = "2023",
                            CC = "150",
                            Color = "Rojo",
                            EstadoPMId = 1,
                            Marca = "Honda",
                            Modelo = "CBR150R",
                            Precio = 9000.00m,
                            ProveedorId = 1
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "contacto@motoparts.com",
                            Nombre = "MotoParts SAC",
                            Telefono = "999888777"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Vendedor"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Gerente"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.StockSucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ProductoMotoId")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId");

                    b.HasIndex("ProductoMotoId", "SucursalId");

                    b.ToTable("StockSucursales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 5,
                            ProductoMotoId = 1,
                            SucursalId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 3,
                            ProductoMotoId = 2,
                            SucursalId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 2,
                            ProductoMotoId = 2,
                            SucursalId = 2
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Sucursal Lima",
                            Ubicacion = "Av. Siempre Viva 123"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Sucursal Arequipa",
                            Ubicacion = "Av. Los Olivos 456"
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("Decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("MetodoPagoId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            EmpleadoId = 1,
                            Fecha = new DateOnly(2025, 7, 2),
                            MetodoPagoId = 1,
                            Total = 15000.00m
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            EmpleadoId = 2,
                            Fecha = new DateOnly(2025, 7, 2),
                            MetodoPagoId = 2,
                            Total = 9000.00m
                        });
                });

            modelBuilder.Entity("DyasCsrs.Models.DetallesVenta", b =>
                {
                    b.HasOne("DyasCsrs.Models.Venta", "Venta")
                        .WithMany("Detalles")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.ProductoMoto", "ProductoMoto")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("ProductoMotoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.StockSucursal", null)
                        .WithMany("DetallesVentas")
                        .HasForeignKey("StockSucursalId1");

                    b.Navigation("ProductoMoto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("DyasCsrs.Models.Empleado", b =>
                {
                    b.HasOne("DyasCsrs.Models.Rol", "Rol")
                        .WithMany("Empleados")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DyasCsrs.Models.OpcionDevolucion", b =>
                {
                    b.HasOne("DyasCsrs.Models.EstadoDevolucion", "EstadoDevolucion")
                        .WithMany("OpcionesDevolucion")
                        .HasForeignKey("EstadoDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.Venta", "Venta")
                        .WithOne("OpcionDevolucion")
                        .HasForeignKey("DyasCsrs.Models.OpcionDevolucion", "VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoDevolucion");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("DyasCsrs.Models.ProductoMoto", b =>
                {
                    b.HasOne("DyasCsrs.Models.EstadoProductoMoto", "EstadoProductoMoto")
                        .WithMany("ProductosMoto")
                        .HasForeignKey("EstadoPMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoProductoMoto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("DyasCsrs.Models.StockSucursal", b =>
                {
                    b.HasOne("DyasCsrs.Models.ProductoMoto", "ProductoMoto")
                        .WithMany("StockSucursales")
                        .HasForeignKey("ProductoMotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.Sucursal", "Sucursal")
                        .WithMany("Stocks")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoMoto");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("DyasCsrs.Models.Venta", b =>
                {
                    b.HasOne("DyasCsrs.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.Empleado", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DyasCsrs.Models.MetodoPago", "MetodoPago")
                        .WithMany("Ventas")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("DyasCsrs.Models.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("DyasCsrs.Models.Empleado", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("DyasCsrs.Models.EstadoDevolucion", b =>
                {
                    b.Navigation("OpcionesDevolucion");
                });

            modelBuilder.Entity("DyasCsrs.Models.EstadoProductoMoto", b =>
                {
                    b.Navigation("ProductosMoto");
                });

            modelBuilder.Entity("DyasCsrs.Models.MetodoPago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("DyasCsrs.Models.ProductoMoto", b =>
                {
                    b.Navigation("DetallesVentas");

                    b.Navigation("StockSucursales");
                });

            modelBuilder.Entity("DyasCsrs.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("DyasCsrs.Models.Rol", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("DyasCsrs.Models.StockSucursal", b =>
                {
                    b.Navigation("DetallesVentas");
                });

            modelBuilder.Entity("DyasCsrs.Models.Sucursal", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("DyasCsrs.Models.Venta", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("OpcionDevolucion")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
